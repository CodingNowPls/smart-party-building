<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.party.building.learn.mapper.LearnMapper">

    <resultMap type="Learn" id="LearnResult">
        <result property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="userName" column="user_name"/>
        <result property="deptId" column="dept_id"/>
        <result property="deptName" column="dept_name"/>
        <result property="newId" column="new_id"/>
        <result property="newTitle" column="new_title"/>
        <result property="status" column="status"/>
        <result property="score" column="score"/>
        <result property="type" column="type"/>
        <result property="signTime" column="sign_time"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="remark" column="remark"/>
    </resultMap>

    <sql id="selectLearnVo">
        select t.id,
               t.user_id,
               s.user_name,
               s.dept_id,
               d.dept_name,
               t.new_id,
               n.new_title,
               t.type,
               t.sign_time,
               t.status,
               t.score,
               t.create_by,
               t.create_time,
               t.update_by,
               t.update_time,
               t.remark
        from tb_learn t
                 left join sys_user s on s.user_id = t.user_id
                 left join tb_news n on n.new_id = t.new_id
                 left join sys_dept d on d.dept_id = s.dept_id
    </sql>

    <select id="selectLearnList" parameterType="Learn" resultMap="LearnResult">
        <include refid="selectLearnVo"/>
        <where>
            <if test="userId != null ">and t.user_id = #{userId}</if>
            <if test="userName != null  and userName != ''">and s.user_name like concat('%', #{userName}, '%')</if>
            <if test="type != null  and type != ''">and type = #{type}</if>
            <if test="newId != null ">and t.new_id = #{newId}</if>
            <if test="status != null  and status != ''">and status = #{status}</if>
            <if test="score != null ">and t.score = #{score}</if>
        </where>
    </select>

    <select id="selectLearnById" parameterType="Long" resultMap="LearnResult">
        <include refid="selectLearnVo"/>
        where id = #{id}
    </select>

    <insert id="insertLearn" parameterType="Learn" useGeneratedKeys="true" keyProperty="id">
        insert into tb_learn
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null ">user_id,</if>
            <if test="userName != null  and userName != ''">user_name,</if>
            <if test="type != null  and type != ''">type,</if>
            <if test="newId != null ">new_id,</if>
            <if test="status != null  and status != ''">status,</if>
            <if test="score != null ">score,</if>
            <if test="signTime != null  and signTime != ''">sign_time,</if>
            <if test="createBy != null  and createBy != ''">create_by,</if>
            <if test="createTime != null ">create_time,</if>
            <if test="updateBy != null  and updateBy != ''">update_by,</if>
            <if test="updateTime != null ">update_time,</if>
            <if test="remark != null  and remark != ''">remark,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null ">#{userId},</if>
            <if test="userName != null  and userName != ''">#{userName},</if>
            <if test="type != null  and type != ''">#{type},</if>
            <if test="newId != null ">#{newId},</if>
            <if test="status != null  and status != ''">#{status},</if>
            <if test="score != null ">#{score},</if>
            <if test="signTime != null  and signTime != ''">#{signTime},</if>
            <if test="createBy != null  and createBy != ''">#{createBy},</if>
            <if test="createTime != null ">#{createTime},</if>
            <if test="updateBy != null  and updateBy != ''">#{updateBy},</if>
            <if test="updateTime != null ">#{updateTime},</if>
            <if test="remark != null  and remark != ''">#{remark},</if>
        </trim>
    </insert>

    <update id="updateLearn" parameterType="Learn">
        update tb_learn
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null ">user_id = #{userId},</if>
            <if test="userName != null  and userName != ''">user_name = #{userName},</if>
            <if test="type != null  and type != ''">type = #{type},</if>
            <if test="newId != null ">new_id = #{newId},</if>
            <if test="status != null  and status != ''">status = #{status},</if>
            <if test="score != null ">score = #{score},</if>
            <if test="signTime != null  and signTime != ''">sign_time = #{signTime},</if>
            <if test="createBy != null  and createBy != ''">create_by = #{createBy},</if>
            <if test="createTime != null ">create_time = #{createTime},</if>
            <if test="updateBy != null  and updateBy != ''">update_by = #{updateBy},</if>
            <if test="updateTime != null ">update_time = #{updateTime},</if>
            <if test="remark != null  and remark != ''">remark = #{remark},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteLearnById" parameterType="Long">
        delete
        from tb_learn
        where id = #{id}
    </delete>

    <delete id="deleteLearnByIds" parameterType="String">
        delete from tb_learn where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <!-- 同组成员排行-->
    <select id="selectUserRankList" parameterType="Learn" resultMap="LearnResult">
        select t.user_id,s.user_name,s.dept_id,d.dept_name,sum(score) as score
        from tb_learn t
        left join sys_user s on s.user_id = t.user_id
        left join sys_dept d on d.dept_id = s.dept_id
        <where>
            <if test="userName != null  and userName != ''">and s.user_name like concat('%', #{userName}, '%')</if>
            <if test="deptId != null and deptId != 0">
                AND (s.dept_id = #{deptId} OR s.dept_id IN ( SELECT t.dept_id FROM sys_dept t WHERE FIND_IN_SET
                (#{deptId},ancestors) ))
            </if>
        </where>
        group by t.user_id order by score desc
    </select>

    <!--不同组排行-->
    <select id="selectDeptRankList" parameterType="Learn" resultMap="LearnResult">
        select d.dept_id, d.dept_name, ifnull(sum(score), 0) as score
        from sys_dept d
                 left join sys_user s on s.dept_id = d.dept_id
                 left join tb_learn t on t.user_id = s.user_id
        where d.dept_id !=100 and d.del_flag = '0'
        group by dept_id
        order by score desc
    </select>

</mapper>